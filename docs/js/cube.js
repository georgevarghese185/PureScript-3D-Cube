// Generated by psc-bundle 0.11.5
var PS = {};
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Category = PS["Control.Category"];
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };                                                 
  var showNumber = new Show($foreign.showNumberImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showNumber"] = showNumber;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.select = function(selector) {
      return function() {
          return jQuery(selector);
      };
  };

  exports.create = function(html) {
      return function() {
          return jQuery(html);
      };
  };

  exports.setAttr = function(attr) {
      return function(val) {
          return function(ob) {
              return function() {
                  ob.attr(attr, val);
              };
          };
      };
  };

  exports.attr = function(attrs) {
      return function(ob) {
          return function() {
              ob.attr(attrs);
          };
      };
  };

  exports.css = function(props) {
      return function(ob) {
          return function() {
              ob.css(props);
          };
      };
  };

  exports.toggleClass = function(cls) {
      return function(ob) {
          return function() {
              ob.toggleClass(cls);
          };
      };
  };

  exports.setClass = function(cls) {
      return function(flag) {
          return function(ob) {
              return function() {
                  ob.toggleClass(cls, flag);
              };
          };
      };
  };

  exports.append = function(ob1) {
      return function(ob) {
          return function() {
              ob.append(ob1);
          };
      };
  };

  exports.body = function() {
      return jQuery(document.body);
  };

  exports.on = function(evt) {
      return function(act) {
          return function(ob) {
              return function() {
                  ob.on(evt, function(e) {
                      act(e)(jQuery(this))();
                  });
              };
          };
      };
  };


  exports.off = function(evt) {
      return function(ob) {
          return function() {
              return ob.off(evt);
          };
      };
  };

  exports.getPageX = function(e) {
      return function() {
          return e.pageX;
      };
  };

  exports.getPageY = function(e) {
      return function() {
          return e.pageY;
      };
  };
})(PS["Control.Monad.Eff.JQuery"] = PS["Control.Monad.Eff.JQuery"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Monad.Eff.JQuery"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];            
  var addClass = function (cls) {
      return $foreign.setClass(cls)(true);
  };
  exports["addClass"] = addClass;
  exports["append"] = $foreign.append;
  exports["body"] = $foreign.body;
  exports["create"] = $foreign.create;
  exports["css"] = $foreign.css;
  exports["getPageX"] = $foreign.getPageX;
  exports["getPageY"] = $foreign.getPageY;
  exports["off"] = $foreign.off;
  exports["on"] = $foreign.on;
  exports["select"] = $foreign.select;
  exports["setAttr"] = $foreign.setAttr;
})(PS["Control.Monad.Eff.JQuery"] = PS["Control.Monad.Eff.JQuery"] || {});
(function(exports) {
    "use strict";

  exports.newSTRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readSTRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.writeSTRef = function (ref) {
    return function (a) {
      return function () {
        return ref.value = a; // eslint-disable-line no-return-assign
      };
    };
  };
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Monad.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["newSTRef"] = $foreign.newSTRef;
  exports["readSTRef"] = $foreign.readSTRef;
  exports["writeSTRef"] = $foreign.writeSTRef;
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
    "use strict";

  exports._requestAnimationFrame = function(fn) {
    return function(window) {
      return function() {
        return window.requestAnimationFrame(fn);
      };
    };
  };
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["DOM.HTML.Window"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_WebStorage_Types = PS["DOM.WebStorage.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  var RequestAnimationFrameId = function (x) {
      return x;
  };
  var requestAnimationFrame = function (fn) {
      return function ($31) {
          return Data_Functor.map(Control_Monad_Eff.functorEff)(RequestAnimationFrameId)($foreign._requestAnimationFrame(fn)($31));
      };
  };
  exports["requestAnimationFrame"] = requestAnimationFrame;
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_JQuery = PS["Control.Monad.Eff.JQuery"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var DOM = PS["DOM"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var rotateCube = function (angleRef) {
      return function (newAngle) {
          return function __do() {
              var v = Control_Monad_Eff_JQuery.select(".cube")();
              var v1 = Control_Monad_ST.readSTRef(angleRef)();
              Control_Monad_Eff_JQuery.css({
                  transform: "rotateX(" + (Data_Show.show(Data_Show.showNumber)(newAngle.x) + ("deg)" + (" rotateY(" + (Data_Show.show(Data_Show.showNumber)(newAngle.y) + "deg)"))))
              })(v)();
              return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(angleRef)(newAngle))();
          };
      };
  };
  var startMouseHandlers = function (angleRef) {
      return function (velocityRef) {
          return function __do() {
              var v = Control_Monad_ST.newSTRef({
                  x: 0.0, 
                  y: 0.0
              })();
              var v1 = Control_Monad_Eff_JQuery.body();
              var moveHandler = function (event) {
                  return function (jq) {
                      return function __do() {
                          var v2 = Control_Monad_Eff_JQuery.getPageX(event)();
                          var v3 = Control_Monad_Eff_JQuery.getPageY(event)();
                          var v4 = Control_Monad_ST.readSTRef(v)();
                          var v5 = Control_Monad_ST.readSTRef(angleRef)();
                          var newAngle = {
                              x: v5.x + -(v3 - v4.y), 
                              y: (v5.y + v2) - v4.x
                          };
                          rotateCube(angleRef)(newAngle)();
                          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)({
                              x: v2, 
                              y: v3
                          }))();
                      };
                  };
              };
              var upHandler = function (event) {
                  return function (jq) {
                      return Control_Monad_Eff_JQuery.off("mousemove")(v1);
                  };
              };
              var downHandler = function (event) {
                  return function (jq) {
                      return function __do() {
                          var v2 = Control_Monad_Eff_JQuery.getPageX(event)();
                          var v3 = Control_Monad_Eff_JQuery.getPageY(event)();
                          Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)({
                              x: v2, 
                              y: v3
                          }))();
                          Control_Monad_Eff_JQuery.on("mousemove")(moveHandler)(v1)();
                          return Control_Monad_Eff_JQuery.on("mouseup")(upHandler)(v1)();
                      };
                  };
              };
              Control_Monad_Eff_JQuery.css({
                  width: "100%", 
                  height: "100%"
              })(v1)();
              return Control_Monad_Eff_JQuery.on("mousedown")(downHandler)(v1)();
          };
      };
  };
  var startSpinner = function (angleRef) {
      return function (velocityRef) {
          var spinner = function __do() {
              var v = Control_Monad_ST.readSTRef(velocityRef)();
              var v1 = Control_Monad_ST.readSTRef(angleRef)();
              var newAngle = {
                  x: v1.x + v.x / 60.0, 
                  y: v1.y + v.y / 60.0
              };
              rotateCube(angleRef)(newAngle)();
              var v2 = DOM_HTML.window();
              return Data_Functor["void"](Control_Monad_Eff.functorEff)(DOM_HTML_Window.requestAnimationFrame(spinner)(v2))();
          };
          return spinner;
      };
  };
  var run = function __do() {
      var v = Control_Monad_ST.newSTRef({
          x: 0.0, 
          y: 0.0
      })();
      var v1 = Control_Monad_ST.newSTRef({
          x: 0.0, 
          y: 0.0
      })();
      startSpinner(v)(v1)();
      return startMouseHandlers(v)(v1)();
  };
  var drawCube = function __do() {
      var v = Control_Monad_Eff_JQuery.create("<div>")();
      Control_Monad_Eff_JQuery.setAttr("id")("front_face")(v)();
      Control_Monad_Eff_JQuery.addClass("face")(v)();
      var v1 = Control_Monad_Eff_JQuery.create("<div>")();
      Control_Monad_Eff_JQuery.setAttr("id")("back_face")(v1)();
      Control_Monad_Eff_JQuery.addClass("face")(v1)();
      var v2 = Control_Monad_Eff_JQuery.create("<div>")();
      Control_Monad_Eff_JQuery.setAttr("id")("right_face")(v2)();
      Control_Monad_Eff_JQuery.addClass("face")(v2)();
      var v3 = Control_Monad_Eff_JQuery.create("<div>")();
      Control_Monad_Eff_JQuery.setAttr("id")("left_face")(v3)();
      Control_Monad_Eff_JQuery.addClass("face")(v3)();
      var v4 = Control_Monad_Eff_JQuery.create("<div>")();
      Control_Monad_Eff_JQuery.setAttr("id")("top_face")(v4)();
      Control_Monad_Eff_JQuery.addClass("face")(v4)();
      var v5 = Control_Monad_Eff_JQuery.create("<div>")();
      Control_Monad_Eff_JQuery.setAttr("id")("bottom_face")(v5)();
      Control_Monad_Eff_JQuery.addClass("face")(v5)();
      var v6 = Control_Monad_Eff_JQuery.create("<div>")();
      Control_Monad_Eff_JQuery.addClass("cube")(v6)();
      Control_Monad_Eff_JQuery.css({
          transform: "translateX(-100px) translateY(-100px) translateZ(100px)"
      })(v)();
      Control_Monad_Eff_JQuery.css({
          transform: "translateX(-100px) translateY(-100px) translateZ(-100px)"
      })(v1)();
      Control_Monad_Eff_JQuery.css({
          transform: "translateY(-100px) rotateY(90deg)"
      })(v2)();
      Control_Monad_Eff_JQuery.css({
          transform: "translateY(-100px) translateX(-200px) rotateY(90deg)"
      })(v3)();
      Control_Monad_Eff_JQuery.css({
          transform: "translateX(-100px) translateY(-200px) rotateX(90deg)"
      })(v4)();
      Control_Monad_Eff_JQuery.css({
          transform: "translateX(-100px) rotateX(90deg)"
      })(v5)();
      Control_Monad_Eff_JQuery.css({
          position: "relative", 
          transformStyle: "preserve-3d"
      })(v6)();
      Control_Monad_Eff_JQuery.append(v)(v6)();
      Control_Monad_Eff_JQuery.append(v1)(v6)();
      Control_Monad_Eff_JQuery.append(v2)(v6)();
      Control_Monad_Eff_JQuery.append(v3)(v6)();
      Control_Monad_Eff_JQuery.append(v4)(v6)();
      Control_Monad_Eff_JQuery.append(v5)(v6)();
      var v7 = Control_Monad_Eff_JQuery.create("<div>")();
      Control_Monad_Eff_JQuery.setAttr("id")("cube-wrapper")(v7)();
      Control_Monad_Eff_JQuery.css({
          position: "absolute", 
          left: "50%", 
          top: "50%", 
          perspective: "1500px"
      })(v7)();
      Control_Monad_Eff_JQuery.append(v6)(v7)();
      var v8 = Control_Monad_Eff_JQuery.body();
      Control_Monad_Eff_JQuery.append(v7)(v8)();
      var v9 = Control_Monad_Eff_JQuery.select(".face")();
      return Control_Monad_Eff_JQuery.css({
          position: "absolute", 
          width: "200px", 
          height: "200px", 
          border: "solid green 3px", 
          backgroundColor: "rgba(0, 192, 255, 0.17)"
      })(v9)();
  };
  var main = function __do() {
      drawCube();
      return run();
  };
  exports["drawCube"] = drawCube;
  exports["main"] = main;
  exports["rotateCube"] = rotateCube;
  exports["run"] = run;
  exports["startMouseHandlers"] = startMouseHandlers;
  exports["startSpinner"] = startSpinner;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
